# -*- coding: utf-8 -*-
"""analysis the weatherDataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14a3zf_Smk-xiGIHYOFS7kHgaSlIsJrMA

working on real project with python
(A part of big data analysis)

the weather dataset
"""

import pandas as pd
df = pd.read_csv("/content/Project 1 - Weather Dataset.csv")

df.info()

"""HOW  to analyze dataframes
.head()
"""

df.head()

""".shape"""

df.shape

""".index

"""

df.index

""".columns

"""

df.columns

""".dtype"""

df.dtypes

""".unique()"""

df['Weather'].unique()

""".nunique()"""

df.nunique()

""".count"""

df.count()

""".value_counts"""

df['Weather'].value_counts()

"""Q) 1 Find all the unique "wind speed" values in the data"""

df.head(2)

df['Wind Speed_km/h'].nunique()

df['Wind Speed_km/h'].unique()

"""Q)2 Find the number of times when the " weather is exaclty clear

"""

df.head(2)

#values count
df.Weather.value_counts()

#filterning
#df.head(2)
df[df.Weather == 'Clear']

#group by
df.groupby('Weather').get_group('Clear')

"""Q3 ) find the number of time when the " wind speed was exactly 4 km/h"
"""

df.head(2)

# @title Wind Speed_km/h

from matplotlib import pyplot as plt
df['Wind Speed_km/h'].plot(kind='hist', bins=20, title='Wind Speed_km/h')
plt.gca().spines[['top', 'right',]].set_visible(False)

df[df['Wind Speed_km/h']==4]

"""Q4) Find out all the null values in the data."""

#using isnull
df.isnull().sum()

#using not null
df.notnull().sum()

"""Q5) Rename the coulumn name " weather" of the the dataframe to "weather condition"



"""

df.rename(columns={'Weather': 'Weather Condition'}, inplace = True)

df.head()

"""Q6) what is the mean " visibility"?"""

df.head(2)

df.Visibility_km.mean()

"""Q7) what is the standard devation of pressur in the data"""

df.Press_kPa.std()

"""Q8 ) what is the variance of ' relative humidity' in this data?"""

df.head(2)

df["Rel Hum_%"].var()

"""Q9 )  find the all instances when ' snow ' was recorded"""

#value_counts()
df['Weather Condition'].value_counts()

#filtring
df[df['Weather Condition'] == 'Snow']

#str.contains
df[df['Weather Condition'].str.contains('Snow')].head(50)

"""Q10) find all instances when ' wind speed is abouve 24' and ' visiblity is 25'"""

df.head(2)

df[(df['Wind Speed_km/h'] > 24) & (df["Visibility_km"]==25)]

"""Q11) what is the mean value of each column against each ' weather condition' ?

"""

df.head(2)

df.groupby('Weather Condition').mean(numeric_only=True)

"""q12) what is the mininum and maxinum value of each column against each ' weather condition '?"""

df.head(2)

df.groupby('Weather Condition').min()

df.groupby('Weather Condition').max()

"""Q13) show all the records where weather condition is fog"""

df.head(2)

df[df['Weather Condition'] == 'Fog']

"""Q14) find all instances when ' weather is clean' or ' visibility is above 40'

"""

df[(df['Weather Condition'] == 'Clear') | (df['Visibility_km']> 40 )]

"""Q15) find all instances when:


A : "Weather is Clear" and " relative humidity is greater than 50"

or

B : " vistbility is above 40"
"""

df.head(3)

df[(df["Weather Condition"] == 'Clear') & (df['Rel Hum_%']>50) | (df['Visibility_km']>40)]

